(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{427:function(t,o,e){"use strict";e.r(o);var s=e(45),a=Object(s.a)({},(function(){var t=this,o=t.$createElement,e=t._self._c||o;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"【译】给-python-数据科学-3-个最好的-vscode-插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#【译】给-python-数据科学-3-个最好的-vscode-插件"}},[t._v("#")]),t._v(" 【译】给 Python 数据科学 3 个最好的 VSCode 插件")]),t._v(" "),e("p",[t._v("用 IDE（Integrated Development Environment）开发的好处在于它能在编写代码、静态检查、语法高亮等方面给予你长期的帮助，节省你的时间。")]),t._v(" "),e("p",[e("img",{attrs:{src:"/Users/fengyajie/Downloads/vs_python/vs_py_title.jpeg",alt:"vs_py_title"}})]),t._v(" "),e("p",[t._v("IDE 的主要问题在于它很笨重，例如 PyCharm 会占用大量的磁盘、内存空间，启动时间也很长。这也是为什么我会切换到 Visual Studio Code 的原因，它是一个轻量的 IDE，多年前开始使用它之后，我再也回不去了。配合不同的插件使用，VSCode 甚至可以媲美一些需要花钱才能体验的 IDE 的高级特性。")]),t._v(" "),e("p",[t._v("今天我主要介绍 3 款 Python 及数据科学相关的插件，在开始之前，你需要做一些准备工作")]),t._v(" "),e("h2",{attrs:{id:"准备工作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[t._v("#")]),t._v(" 准备工作")]),t._v(" "),e("ul",[e("li",[t._v("安装 "),e("a",{attrs:{href:"https://www.python.org/downloads/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python"),e("OutboundLink")],1),t._v("（我使用 3.7.6）")]),t._v(" "),e("li",[t._v("安装 "),e("a",{attrs:{href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Visual Studio Code"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("安装 "),e("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=ms-python.python",target:"_blank",rel:"noopener noreferrer"}},[t._v("VSCode Python"),e("OutboundLink")],1),t._v(" 插件")])]),t._v(" "),e("h2",{attrs:{id:"_1-notebook-支持"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-notebook-支持"}},[t._v("#")]),t._v(" 1. Notebook 支持")]),t._v(" "),e("p",[t._v("我是一个数据科学家，我喜欢使用 Notebooks，它是我的工作流中的重要部分，我很少跳到编辑器去编码，主要原因在于 Notebooks 更适合做数据分析，这一点对数据科学很重要。")]),t._v(" "),e("p",[t._v("当 VSCode 首次支持 Notebook 时，我就开始使用了，一开始，它的响应相对于 Jupyter Notebooks 有一点慢，但这个问题似乎已经解决了。")]),t._v(" "),e("p",[t._v("除了你之前安装的 VSCode Python 插件外，你无需安装任何插件就可以使用 Notebooks。")]),t._v(" "),e("p",[t._v("进入 Notebooks 模式，你需要将你的文件后缀命名为 "),e("code",[t._v(".ipynb")]),t._v("，例如 "),e("code",[t._v("sample.ipynb")])]),t._v(" "),e("p",[e("img",{attrs:{src:"/Users/fengyajie/Downloads/vs_python/vscode_notebook.gif",alt:"vscode_notebook"}})]),t._v(" "),e("h2",{attrs:{id:"_2-autodocstring"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-autodocstring"}},[t._v("#")]),t._v(" 2. autoDocstring")]),t._v(" "),e("p",[t._v("看名字你应该就可以猜到这个插件是做什么的——该插件可以帮你管理你的文档注释，在使用前，你需要安装插件：autoDocstring。")]),t._v(" "),e("p",[t._v("下面你可以创建一个 "),e("code",[t._v("main.py")]),t._v(" 文件，并任意定义一个函数，在函数体的第一行敲入 3 个双引号，回车，该插件便会自动帮你填充一个 doc string 模板。你可以通过 Tab 键来切换到下一个编辑处。")]),t._v(" "),e("p",[t._v("该插件最大的好处是让你的 docstring 保持一致。")]),t._v(" "),e("p",[e("img",{attrs:{src:"/Users/fengyajie/Downloads/vs_python/vscode_autodocstring.gif",alt:"vscode_autodocstring"}})]),t._v(" "),e("h2",{attrs:{id:"_3-arepl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-arepl"}},[t._v("#")]),t._v(" 3. AREPL")]),t._v(" "),e("p",[t._v("当你厌倦于切换到命令行 print 结果时，而只想在 VSCode 界面查看局部变量信息，怎么做？")]),t._v(" "),e("p",[t._v("你可以使用 AREPL 插件，它会在另一个分割窗口实时显示你程序的变量值，并无需运行程序就可以打印出 "),e("code",[t._v("print")]),t._v(" 语句中的信息。")]),t._v(" "),e("p",[t._v("可能你一开始并不觉得该插件有什么特别，但相信我，它真的会带来就像白天和黑夜的差别。")]),t._v(" "),e("p",[t._v("当你打开一个 Python 文件，如 "),e("code",[t._v("main.py")]),t._v(" 文件，你会在右上角看到一个红色的图标，点击它会出现下图所示的样子。")]),t._v(" "),e("p",[e("img",{attrs:{src:"/Users/fengyajie/Downloads/vs_python/vscode_arepl.gif",alt:"vscode_arepl"}})]),t._v(" "),e("h2",{attrs:{id:"离开之前"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#离开之前"}},[t._v("#")]),t._v(" 离开之前")]),t._v(" "),e("p",[t._v("本文并没有列出所有的好的插件，只列出了我认为最有用的。当然，如果有和本文类似的文章，请告诉我，我帮忙转发。")]),t._v(" "),e("p",[t._v("感谢阅读。")]),t._v(" "),e("p",[t._v("原文链接：https://towardsdatascience.com/top-3-vs-code-extensions-for-python-and-data-science-7462dd4ee530")])])}),[],!1,null,null,null);o.default=a.exports}}]);