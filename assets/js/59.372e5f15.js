(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{412:function(s,t,a){"use strict";a.r(t);var e=a(45),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"leetcode-7-reverse-integer-题解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-7-reverse-integer-题解"}},[s._v("#")]),s._v(" [LeetCode] 7. Reverse Integer 题解")]),s._v(" "),a("h2",{attrs:{id:"问题描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题描述"}},[s._v("#")]),s._v(" 问题描述")]),s._v(" "),a("p",[s._v("给定一个 32 位有符号整数，将每一位的数字反序")]),s._v(" "),a("p",[a("strong",[s._v("例1：")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("输入：123\n输出：321\n")])])]),a("p",[a("strong",[s._v("例2：")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("输入：-123\n输出：-321\n")])])]),a("p",[a("strong",[s._v("例3：")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("输入：120\n输出：21\n")])])]),a("p",[s._v("注意：")]),s._v(" "),a("p",[s._v("假设我们使用的是 32 位系统，且只能处理 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mo",[s._v("[")]),a("mo",[s._v("−")]),a("msup",[a("mn",[s._v("2")]),a("mrow",[a("mn",[s._v("3")]),a("mn",[s._v("1")])],1)],1),a("mo",{attrs:{separator:"true"}},[s._v(",")]),a("msup",[a("mn",[s._v("2")]),a("mrow",[a("mn",[s._v("3")]),a("mn",[s._v("1")])],1)],1),a("mo",[s._v("−")]),a("mn",[s._v("1")]),a("mo",[s._v("]")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("[-2^{31},2^{31}-1]")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.8141079999999999em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"1.064108em","vertical-align":"-0.25em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mopen"},[s._v("[")]),a("span",{staticClass:"mord"},[s._v("−")]),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathrm"},[s._v("2")]),a("span",{staticClass:"vlist"},[a("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[a("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[a("span",{staticStyle:{"font-size":"0em"}},[s._v("​")])]),a("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[a("span",{staticClass:"mord scriptstyle uncramped"},[a("span",{staticClass:"mord mathrm"},[s._v("3")]),a("span",{staticClass:"mord mathrm"},[s._v("1")])])])]),a("span",{staticClass:"baseline-fix"},[a("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[a("span",{staticStyle:{"font-size":"0em"}},[s._v("​")])]),s._v("​")])])]),a("span",{staticClass:"mpunct"},[s._v(",")]),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathrm"},[s._v("2")]),a("span",{staticClass:"vlist"},[a("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[a("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[a("span",{staticStyle:{"font-size":"0em"}},[s._v("​")])]),a("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[a("span",{staticClass:"mord scriptstyle uncramped"},[a("span",{staticClass:"mord mathrm"},[s._v("3")]),a("span",{staticClass:"mord mathrm"},[s._v("1")])])])]),a("span",{staticClass:"baseline-fix"},[a("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[a("span",{staticStyle:{"font-size":"0em"}},[s._v("​")])]),s._v("​")])])]),a("span",{staticClass:"mbin"},[s._v("−")]),a("span",{staticClass:"mord mathrm"},[s._v("1")]),a("span",{staticClass:"mclose"},[s._v("]")])])])]),s._v(" 范围的整数，当出现整型溢出时，你的程序返回 0")]),s._v(" "),a("h2",{attrs:{id:"问题难度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题难度"}},[s._v("#")]),s._v(" 问题难度")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("Easy")])])]),s._v(" "),a("h2",{attrs:{id:"解题思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解题思路"}},[s._v("#")]),s._v(" 解题思路")]),s._v(" "),a("p",[s._v("首先这道题不适合使用 Python 来做，原因是面对负数时，Python 的行为与期望不符，例如")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(">>> -31/10\n-3.1\n>>> -31%10\n9\n")])])]),a("p",[s._v("而使用 C++ 这样的语言，你会得到这样的结果")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('int main() {\n\tcout << "-3 / 10 = " << -3/10 << endl; \n\tcout << "-3 % 10 = " << -3%10 << endl; \n}\n输出：\n-3 / 10 = 0\n-3 % 10 = -3\n')])])]),a("p",[s._v("可以看到后者比较符合我们的预期。")]),s._v(" "),a("p",[s._v("另外此题的关键在于如何解决整数溢出，思路如下：")]),s._v(" "),a("p",[a("strong",[s._v("整数溢出不能在发生了之后才去判断，而只能在发生溢出之前判断")]),s._v("，我们的算法是，将原数不断除以 10，把得到的余数再不断乘以 10 ，这样就可以将原数「反转」，我们可以形象的把除以 10 看作是原数的右移，而把乘以 10 看做是新数的左移；既然要在溢出之前判断，那么我们就需要先将整型的最大值或最小值除以 10，然后将结果和该值进行比较，如果发现进一步操作会发生溢出，则返回 0。")]),s._v(" "),a("p",[s._v("对于正数，我们知道其最大值是 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("msup",[a("mn",[s._v("2")]),a("mrow",[a("mn",[s._v("3")]),a("mn",[s._v("1")])],1)],1),a("mo",[s._v("−")]),a("mn",[s._v("1")]),a("mo",[s._v("=")]),a("mn",[s._v("2")]),a("mn",[s._v("1")]),a("mn",[s._v("4")]),a("mn",[s._v("7")]),a("mn",[s._v("4")]),a("mn",[s._v("8")]),a("mn",[s._v("3")]),a("mn",[s._v("6")]),a("mn",[s._v("4")]),a("mn",[s._v("7")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("2^{31}-1=2147483647")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.8141079999999999em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.897438em","vertical-align":"-0.08333em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathrm"},[s._v("2")]),a("span",{staticClass:"vlist"},[a("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[a("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[a("span",{staticStyle:{"font-size":"0em"}},[s._v("​")])]),a("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[a("span",{staticClass:"mord scriptstyle uncramped"},[a("span",{staticClass:"mord mathrm"},[s._v("3")]),a("span",{staticClass:"mord mathrm"},[s._v("1")])])])]),a("span",{staticClass:"baseline-fix"},[a("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[a("span",{staticStyle:{"font-size":"0em"}},[s._v("​")])]),s._v("​")])])]),a("span",{staticClass:"mbin"},[s._v("−")]),a("span",{staticClass:"mord mathrm"},[s._v("1")]),a("span",{staticClass:"mrel"},[s._v("=")]),a("span",{staticClass:"mord mathrm"},[s._v("2")]),a("span",{staticClass:"mord mathrm"},[s._v("1")]),a("span",{staticClass:"mord mathrm"},[s._v("4")]),a("span",{staticClass:"mord mathrm"},[s._v("7")]),a("span",{staticClass:"mord mathrm"},[s._v("4")]),a("span",{staticClass:"mord mathrm"},[s._v("8")]),a("span",{staticClass:"mord mathrm"},[s._v("3")]),a("span",{staticClass:"mord mathrm"},[s._v("6")]),a("span",{staticClass:"mord mathrm"},[s._v("4")]),a("span",{staticClass:"mord mathrm"},[s._v("7")])])])]),s._v(" ，所以如果结果 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("y")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("y")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.625em","vertical-align":"-0.19444em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[s._v("y")])])])]),s._v(" 在下一次「左移」前大于 214748364，那么就一定会发生溢出；特殊情况是 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("y")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("y")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.625em","vertical-align":"-0.19444em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[s._v("y")])])])]),s._v(" 在「左移」前等于 214748364，此时还需要判断下一个余数是否超过 7，如果超过，也可以判断其会发生溢出。")]),s._v(" "),a("p",[s._v("同理，负数也可以这样进行判断，这样我们就可以写出程序了：")]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("#include "),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("iostream"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n#include "),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("climits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\nusing namespace std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("integer_reverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" remainder "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" INT_MAX"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" INT_MAX"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" remainder "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" INT_MIN"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" INT_MIN"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" remainder "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" remainder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("可以看到，两个 "),a("code",[s._v("if")]),s._v(" 语句分别处理正数和负数两种情况，而 "),a("code",[s._v("if")]),s._v(" 中的条件就包含了刚才说的两种溢出情况。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://leetcode.com/problems/reverse-integer/",target:"_blank",rel:"noopener noreferrer"}},[s._v("原题链接"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);